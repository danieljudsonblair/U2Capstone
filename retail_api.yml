openapi: 3.0.0
info:
  version: 0.0.1
  title: Retail API Service (U2 Capstone)
  description: Database-backed REST web microservice that enables users to search for and purchase products
  
servers: 
  - url: http://localhost:8181
    description: Local dev server
    
paths:
  /purchase:
    post:
      summary: Create a new purchase
      description: Creates new purchase object with existing customer Id or new Customer object
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchasePost'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
                
  /products:            
    get:
      summary: Get all products
      description: Get list of all products in DB
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseList'
      
  /products/{id}:
    get:
      summary: Get product by id
      description: Queries for product by id
      parameters: 
        - name: id
          in: path
          required: true
          description: Product id
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
                
  /products/inventory:
    get:
      summary: Get a list of products currently in inventory
      description: Get products in inventory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponseList'
                
  /inventory:              
    get:
      summary: Get all inventory objects
      description: Get list of all inventory objects in DB
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryResponseList'
                
  /inventory/{inventory_id}:
    get:
      summary: Get inventory object by id
      description: Queries for inventory object by id
      parameters: 
        - name: inventory_id
          in: path
          required: true
          description: Inventory id
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryResponse'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
                



  
components:
  schemas:

    PurchasePost:
      type: object
      properties:
        customerId:
          type: number
        customer:
          $ref: '#/components/schemas/CustomerPost'
        purchaseDate:
          type: string  
        inventoryList:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseItem'
      required:
      - purchaseDate
      - inventoryList
      
    PurchaseResponse:
      type: object
      properties:
        Invoice:
          type: object
          properties:
            invoiceId:
              type: number
            customerId:
              type: number
        purchaseDate:
          type: string
        customer:
          $ref: '#/components/schemas/CustomerResponse'
        productList:
          type: array
          items:
            $ref: '#/components/schemas/ProductView'
        lvlUpPtsThisPurchase:
          type: number
        totalPrice:
          type: number
          
    CustomerResponse:
      type: object
      properties:
        customer_id:
          type: number
        first_name:
          type: string
        last_name:
          type: string
        street:
          type: string
        city:
          type: string
        zip:
          type: string
        email:
          type: string
        phone:
          type: string
          
    PurchaseItem:
      properties:
        inventoryId:
          type: number
        quantity:
          type: number
      required:
      - inventoryId
      - quantity
          
    CustomerPost:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        street:
          type: string
        city:
          type: string
        zip:
          type: string
        email:
          type: string
        phone:
          type: string
      required: 
      - first_name
      - last_name
      - street
      - city
      - zip
      - email
      - phone
          
    ProductResponse:
      type: object
      properties:
        product_id:
          type: number
        product_name:
          type: string
        product_description:
          type: string
        list_price:
          type: number
        unit_cost:
          type: number
          
    ProductView:
      type: object
      properties:
        productName:
          type: string
        productDescription:
          type: string
        quantity:
          type: number
        listPrice:
          type: number
        productTotal:
          type: number
          
    ProductResponseList:
      type: array
      items:
        $ref: '#/components/schemas/ProductResponse'

    InventoryResponse:
      type: object
      properties:
        inventory_id:
          type: number
        product_id:
          type: number
        quantity:
          type: number
          
    InventoryResponseList:
      type: array
      items:
        $ref: '#/components/schemas/InventoryResponse'
        
    InvoicePost:
      type: object
      properties:
        purchase_date:
          type: string
        customer_id:
          type: number
        product_list:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePostItem'
      required:
      - purchase_date
      - customer_id
      - product_list
      
    InvoicePostItem:
      type: object
      properties:
        inventory_id:
          type: number
        quantity:
          type: number
      required:
      - inventory_id
      - quantity

    InvoiceResponse:
      type: object
      properties:
        invoice_id:
          type: number
        purchase_date:
          type: string
        customer_id:
          type: number
        first_name:
          type: string
        last_name:
          type: string
        street:
          type: string
        city:
          type: string
        zip:
          type: string
        email:
          type: string
        phone:
          type: string
        product_list:
          type: array
          items:
            $ref: '#/components/schemas/InvoicePostItem'
            
    InvoiceResponseList:
      type: array
      items:
        $ref: '#/components/schemas/InvoiceResponse'
        
        